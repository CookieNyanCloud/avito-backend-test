// Code generated by MockGen. DO NOT EDIT.
// Source: subFunctions.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockIRepoSub is a mock of IRepoSub interface.
type MockIRepoSub struct {
	ctrl     *gomock.Controller
	recorder *MockIRepoSubMockRecorder
}

// MockIRepoSubMockRecorder is the mock recorder for MockIRepoSub.
type MockIRepoSubMockRecorder struct {
	mock *MockIRepoSub
}

// NewMockIRepoSub creates a new mock instance.
func NewMockIRepoSub(ctrl *gomock.Controller) *MockIRepoSub {
	mock := &MockIRepoSub{ctrl: ctrl}
	mock.recorder = &MockIRepoSubMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRepoSub) EXPECT() *MockIRepoSubMockRecorder {
	return m.recorder
}

// CreateNewTransaction mocks base method.
func (m *MockIRepoSub) CreateNewTransaction(ctx context.Context, idFrom uuid.UUID, operation string, sum float64, idTo uuid.UUID, description string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewTransaction", ctx, idFrom, operation, sum, idTo, description)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNewTransaction indicates an expected call of CreateNewTransaction.
func (mr *MockIRepoSubMockRecorder) CreateNewTransaction(ctx, idFrom, operation, sum, idTo, description interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewTransaction", reflect.TypeOf((*MockIRepoSub)(nil).CreateNewTransaction), ctx, idFrom, operation, sum, idTo, description)
}

// CreateNewUser mocks base method.
func (m *MockIRepoSub) CreateNewUser(ctx context.Context, id uuid.UUID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewUser", ctx, id)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNewUser indicates an expected call of CreateNewUser.
func (mr *MockIRepoSubMockRecorder) CreateNewUser(ctx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewUser", reflect.TypeOf((*MockIRepoSub)(nil).CreateNewUser), ctx, id)
}
