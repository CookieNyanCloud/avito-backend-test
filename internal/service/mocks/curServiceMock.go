// Code generated by MockGen. DO NOT EDIT.
// Source: curService.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockICurrency is a mock of ICurrency interface.
type MockICurrency struct {
	ctrl     *gomock.Controller
	recorder *MockICurrencyMockRecorder
}

// MockICurrencyMockRecorder is the mock recorder for MockICurrency.
type MockICurrencyMockRecorder struct {
	mock *MockICurrency
}

// NewMockICurrency creates a new mock instance.
func NewMockICurrency(ctrl *gomock.Controller) *MockICurrency {
	mock := &MockICurrency{ctrl: ctrl}
	mock.recorder = &MockICurrencyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICurrency) EXPECT() *MockICurrencyMockRecorder {
	return m.recorder
}

// GetCur mocks base method.
func (m *MockICurrency) GetCur(cur string, sum float64) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCur", cur, sum)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCur indicates an expected call of GetCur.
func (mr *MockICurrencyMockRecorder) GetCur(cur, sum interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCur", reflect.TypeOf((*MockICurrency)(nil).GetCur), cur, sum)
}
